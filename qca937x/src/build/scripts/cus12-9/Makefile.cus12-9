# Build list

targetList := drivers drivers_firmware
targetList += wpa_supplicant hostapd iw rootfs_build 

default: ${targetList}

#################################################################################################################################
export SIGMADUT_TOPDIR=${ATH_TOPDIR}/apps/sigma-dut
export BE_TEST_TOPDIR=${ATH_TOPDIR}/build/scripts/x86
export WLAN_DRIVER_TOPDIR=$(ATH_TOPDIR)/drivers
export ATHDIAG_TOPDIR=${ATH_TOPDIR}/drivers/qcacld-new/tools/athdiag
export WLANSSR_TOPDIR=${ATH_TOPDIR}/apps/WlanSSR

export IF_TYPE=SDIO

#################################################################################################################################
#
# driver patch
#
rome_usb_fw_to_h:
	@echo Transforming Rome usb firmware binaries to header files
	@cd ${ATH_TOPDIR}/build/tools && sudo chmod +x ./bin2hex.sh
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/athsetup.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/athsetup.h athsetup_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/athwlan.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/athwlan.h athwlan_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/fakeboar.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/fakeboar.h fakeboar_bin
	T@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/otp.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/otp.h otp_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/qca61x4.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qca61x4.h qca61x4_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/utf.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/utf.h utf_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_cfg.dat ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/cfg.h cfg_dat
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_cfg.usb.ini ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_cfg.h qcom_cfg_ini
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_wlan_nv.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_wlan_nv.h qcom_wlan_nv_bin

tufello_sdio_fw_to_h:
	@echo Transforming Tufello SDIO firmware binaries to header files
	@cd ${ATH_TOPDIR}/build/tools && sudo chmod +x ./bin2hex.sh
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/qwlan30.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qwlan30.h qwlan30_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/bdwlan30.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/bdwlan30.h bdwlan30_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/otp30.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/otp30.h otp30_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/utf30.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/utf30.h utf30_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/utfbd30.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/utfbd30.h utfbd30_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_cfg.dat ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/cfg.h cfg_dat
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_cfg.usb.ini ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_cfg.h qcom_cfg_ini
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/qcacld-new/firmware_bin/WCNSS_qcom_wlan_nv.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/qcom_wlan_nv.h qcom_wlan_nv_bin
	@cd ${ATH_TOPDIR}/build/tools && ./bin2hex.sh ${WLAN_DRIVER_TOPDIR}/firmware/WLAN-firmware/endpointping.bin ${WLAN_DRIVER_TOPDIR}/qcacld-new/CORE/SERVICES/BMI/endpointping.h endpointping_bin
	

custom_patch: common_patch
	@echo Start Custom Patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/cus12-9-005-900_cld_kernel3.8.patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/910-werror.patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/913-compat_dma_sgtable.patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/914-register_inet6addr.patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/cus12-9-001-gpio_wakeup_host.patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/cus12-9-002-qcacld_wow_suspend_resume.patch
	@cd ${WPA_SUPPLICANT_TOPDIR}/.. && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/cus12-9-003-wpa_supplicant_support_vendor_cmd.patch
	@cd ${IW30_TOPDIR}/.. && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/${BOARD_TYPE}/cus12-9-004-iw_3_0.patch
	@echo End of Custom Patch

drivers_patch:
	@echo Patch drivers
	@cd ${WLAN_DRIVER_TOPDIR} && patch -s -p0 < patches/003-cfg80211-backports-3.16.2-1.patch
	@echo Patch wpa_supplicant_8
	@cd ${WLAN_DRIVER_TOPDIR}/../apps/ && patch -s -p0 < ${WLAN_DRIVER_TOPDIR}/patches/002-wpa_supplicant-for-aio.patch
	@cd ${WPA_SUPPLICANT_TOPDIR} && cp wpa_supplicant/android.config wpa_supplicant/.config
	@cd ${WPA_SUPPLICANT_TOPDIR} && cp hostapd/android.config hostapd/.config
drivers_patch_R:
	@echo Revert drivers patch
	@cd ${WLAN_DRIVER_TOPDIR} && patch -R -p0 < patches/003-cfg80211-backports-3.16.2-1.patch
	@echo Revert wpa_supplicant_8 patch
	@cd ${WLAN_DRIVER_TOPDIR}/../apps/ && patch -R -p0 < ${WLAN_DRIVER_TOPDIR}/patches/002-wpa_supplicant-for-aio.patch
	@cd ${WPA_SUPPLICANT_TOPDIR} && rm wpa_supplicant/.config
	@cd ${WPA_SUPPLICANT_TOPDIR} && rm hostapd/.config

#################################################################################################################################
#
# Sigma-DUT package
#
sigmadut_build: rootfs_prep sigmadut_clean
	@echo Build Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} && \
	cp $(SIGMADUT_TOPDIR)/sigma_dut $(INSTALL_ROOT)/sbin

sigmadut_clean:
	@echo Clean Sigma-DUT
	cd $(SIGMADUT_TOPDIR) && \
	${MAKEARCH} clean

#################################################################################################################################
#
# athdiag
#
athdiag_build: rootfs_prep athdiag_clean
	@echo Build athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} && \
	cp $(ATHDIAG_TOPDIR)/athdiag $(INSTALL_ROOT)/sbin

athdiag_clean:
	@echo Clean athdiag tool
	cd $(ATHDIAG_TOPDIR) && \
	${MAKEARCH} clean

#
# SPE_BE_TEST package
#
spe_package:
	@echo Build SPE_BE_TEST
	cd ${BE_TEST_TOPDIR} && \
	./gen_spe_package.sh

#
# WlanSSR build
#
WlanSSR: WlanSSR_CopySource WlanSSR_clean
	@echo Build WlanSSR
	cd $(WLANSSR_TOPDIR) && \
	${MAKEARCH} CC=$(TOOLPREFIX)gcc AR=$(TOOLPREFIX)ar LD=$(TOOLPREFIX)ld && \
	cp -f WlanSSR $(INSTALL_ROOT)/sbin

WlanSSR_CopySource:
	@echo Copy WlanSSR source code to apps
	cp -rf $(ATH_TOPDIR)/rootfs/tools/cus12-9/WlanSSR $(ATH_TOPDIR)/apps/.
	
WlanSSR_clean:
	@echo Clean WlanSSR
	cd $(WLANSSR_TOPDIR) && ${MAKEARCH} clean


